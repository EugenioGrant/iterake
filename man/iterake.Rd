% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iterake.R
\name{iterake}
\alias{iterake}
\title{Iterative raking procedure}
\usage{
iterake(universe, wgt.name = "weight", max.wgt = 3,
  threshold = 1e-10, max.iter = 50, stuck.limit = 5,
  summary = TRUE)
}
\arguments{
\item{universe}{Output object created with \code{universe()} function.}

\item{wgt.name}{Name given to column of weights to be added to data, optional.}

\item{max.wgt}{Maximum value weights can take on, optional. The capping 
takes place prior to applying expansion factor (if \code{N} is set in \code{universe()}.}

\item{threshold}{Value specifying minimum summed difference between weighted 
marginal proportions of sample and universe before algorithm quits, optional.}

\item{max.iter}{Value capping number of iterations for the procedure, optional.}

\item{stuck.limit}{Value capping the number of times summed differences between 
sample and universe can oscillate between increasing and decreasing, optional.}

\item{summary}{Whether or not to display summary output of the procedure, optional.}
}
\value{
Data frame with the resulting weight variable appended to it.
}
\description{
This function creates row-level weights using an iterative raking algorithm based
on targets from a known population (established with \code{universe()}).
The weights are appended as a new column in the data. If \code{iterake()} 
converges, the weighted marginal proportions of the sample will match those
set in \code{universe()}. Summary statistics of the weighting procedure are 
presented by default.
}
\examples{
data(demo_data)

iterake(
    universe = universe(
        data = demo_data,
        
        category(
            name = "Sex",
            buckets = factor(
                x = levels(demo_data[["Sex"]]),
                levels = levels(demo_data[["Sex"]])
            ),
            targets = c(0.4, 0.5),
            sum.1 = TRUE
        ),

        category(
            name = "BirthYear",
            buckets = c(1986:1990),
            targets = rep(0.2, times = 5)
        ),
    
        category(
            name = "EyeColor",
            buckets = c("brown", "green", "blue"),
            targets = c(0.8, 0.1, 0.1)
        ),
    
        category(
            name = "HomeOwner",
            buckets = c(TRUE, FALSE),
            targets = c(3/4, 1/4)
        )
    )
)

}
